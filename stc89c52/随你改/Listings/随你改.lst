C51 COMPILER V9.54   ______                                                                03/30/2018 20:41:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ______
OBJECT MODULE PLACED IN .\Objects\ËæÄã¸Ä.obj
COMPILER INVOKED BY: D:\ruanjizn\keli\C51\BIN\C51.EXE ËæÄã¸Ä.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\ËæÄã¸Ä.lst) TABS(2) OBJECT(.\Objects\ËæÄã¸Ä.obj)

line level    source

   1          typedef struct PID _tag{
*** ERROR C129 IN LINE 1 OF ËæÄã¸Ä.c: missing ';' before '{'
   2          double SetPoint; // ???? Desired Value
   3          double Proportion; // ???? Proportional Const
   4          double Integral; // ???? Integral Const
   5          double Derivative; // ???? Derivative Const
   6          double LastError; // Error[-1]
   7          double PrevError; // Error[-2]
   8          double SumError; // Sums of Errors
   9          } PID;
  10          
  11          double PIDCalc( PID *pp, double NextPoint )
  12          {
  13          double dError,Error;
  14          Error = pp->SetPoint - NextPoint; // ??,??????????
  15          pp->SumError += Error; // ??,??????
  16          dError = pp->LastError - pp->PrevError; // ????,????
  17          pp->PrevError = pp->LastError;
  18          pp->LastError = Error;
  19          return (pp->Proportion * Error // ???
  20          + pp->Integral * pp->SumError // ???
  21          + pp->Derivative * dError // ???);
  22          }
  23          
  24          double sensor (void) // Dummy Sensor Function
  25          {
  26          return 100.0;
  27          }
  28          
  29          void actuator(double rDelta) // Dummy Actuator Function
  30          {
  31          
  32          }
  33          
  34          void main(void)
  35          {
  36          PID sPID; // PID Control Structure
  37          double rOut; // PID Response (Output)
  38          double rIn; // PID Feedback (Input)
  39          sPID.Proportion = 0.5; // Set PID Coefficients
  40          sPID.Integral = 0.5;
  41          sPID.Derivative = 0.0;
  42          sPID.SetPoint = 100.0; // Set PID Setpoint
  43          
  44          for (;;) { 
  45          rIn = sensor (); /*???????*/
  46          rOut = PIDCalc ( &sPID,rIn );
  47          actuator ( rOut );
  48          }
  49          }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
